
======================头部导航栏（没有完全完成） 需要引入vue、axios、elment、包括我们项目的里的（commonCss.js、commonJs.js、hj_css.css）=============================

底部可直接通过布局引入外部页面 buttom.html 我们项目中index.html页面有示例



		<!--导航栏-->
		<div class="header-menu bg-blue topPosition" id="topMenu" style="line-height:0" :style="topgd<150?classA:classB">
			<div class="container">
				<div class="row">
					<div class="container">
						<nav class="nav-bar">
							<div class="nav-header">
								<span class="nav-toggle" data-toggle="#header-navbar">
		                    		<i></i>
		                    		<i></i>
		                    		<i></i>
		                		</span>
							</div>
							<div id="header-navbar" class="nav-collapse">
								<ul class="nav-menu">
									<li>
										<span>
										<a href="index.html" class="logo" style="margin-left: -10px;">
											<img src="http://localhost:8010/MSLOGO1.PNG" alt="" width="120px" style="height: 50px" >
										</a>
									</span>
									</li>
									<li class="dropdown-mega-menu">
										<a>课程</a>
										<div class="mega-menu" style="width: 39%;">
											<ul style="overflow: hidden; width: 100%;">
												<li v-for="(a,index) in category" v-if="index<6" style="width: 200px; float: left;">
													<a :id="a.navId" @click="hrefKcList(a.navId)"><img src="http://localhost:8010/img/apple-touch-icon.png" class="manuImg" />{{a.navName}}</a>
												</li>
												<li v-else style="width:200px; float: left;">
													<a :id="a.navId" @click="hrefKcList(a.navId)"><img src="http://localhost:8010/img/apple-touch-icon.png" class="manuImg" />{{a.navName}}</a>
												</li>
											</ul>
										</div>
									</li>
									<li>
										<a href="coupons_grid.html">2019考研</a>
									</li>
									<li>
										<a href="stores_01.html">学校云</a>
									</li>
									<li>
										<a href="contact_us_01.html">名师专栏</a>
									</li>
									<li style=" margin-left: 100px;">
										<input type="text" class="form-control input-lg search-input"  style=" border: none; margin-top:9px; background-color: white; height: 39px; width: 230px;" placeholder="搜索感兴趣的课程" required="required" v-model='inputText' @keyup='show($event)' @keydown.down='down()' @keydown.up.prevent='up()'>
										<ul style="width: 100%; position: absolute; z-index: 11; background-color: white">
											<li  v-for="(item, index) in result" v-if="index<10" :class='{bg: index==nowIndex}' >
										        <a href="#" ><div class="searchSelect">{{item.lrId}}</div></a>
										    </li>
										</ul>
									</li>
									<li>
										<el-button type="success" style=" margin-top: 9px;" icon="el-icon-search"></el-button>
									</li>
									<li id="topUser" style="margin-top: 8px; width: 100px; height: 10px; ">
										<div id="myCenter1" style="width: 100%;" v-if="Hwg.getToken()!=''&&Hwg.getToken()!=null&&Hwg.getToken()!='null'" >
											<el-menu class="el-menu-demo" mode="horizontal" style="border-bottom: none;" active-text-color="#fff">
												<el-submenu index="2">
													<template slot="title" >
														<a href="myCenter.html" style="color: white;">个人中心</a>
													</template>
													<div style="width: 20%; margin: 5px auto;">
														<img src="http://localhost:8010/MSLOGO.png" class="myImage" style="border:  solid 1px rosybrown;">
													</div>
													<div style="margin: 0 auto; text-align: center; font-size: 20px;">{{user.ui_truename}}</div>
													<el-menu-item >
														<div class="myCourse" style="text-align: center;"><a>计算机</a></div>
													</el-menu-item>
													<el-menu-item>
														<div class="myCourse"  style="text-align: center;"><a>大数据分析</a></div>
													</el-menu-item>
													<el-menu-item>
														<div class="myCourse"  style="text-align: center;"><a>面向对象编程Java</a></div>
													</el-menu-item>
													<div class="myButton">
														<a href="myCenter.html"><span style="color: #FFFFFF;">我的课程</span></a>
													</div>
												</el-submenu>
											</el-menu>
										</div>
									</li>
									<li id="topUser" style="float: left; margin-top:8px; width:120px; " >
										<div id="myHeadPic1" v-if="Hwg.getToken()!=''&&Hwg.getToken()!=null&&Hwg.getToken()!='null'">
											<el-menu class="el-menu-demo" mode="horizontal"  style="border-bottom: none;" active-text-color="#fff">
												<el-submenu>
													<template slot="title">
														<a href="myCenter.html"><img src="http://localhost:8010/MSLOGO.png" style="border:  solid 1px rosybrown; width: 100%;" class="myPic"></a>
													</template>
													<div style="font-size: 14px; color: #869791; text-align: center; ">“{{user.ui_truename}}” 登录中</div>
													<hr />
													<el-menu-item>
														<div class="mySetting">我的认证证书</div>
													</el-menu-item>
													<el-menu-item>
														<div class="mySetting">我的优惠券</div>
													</el-menu-item>
													<el-menu-item>
														<div class="mySetting">设置</div>
													</el-menu-item>
													<el-menu-item>
														<div class="mySetting" @click="outLogin()">退出</div>
													</el-menu-item>
												</el-submenu>
											</el-menu>
										</div>
										<div  v-else>
											<a title="点击登录"  @click="getLogin()"><img src="http://localhost:8010/MSLOGO.png" style="border:  solid 1px rosybrown; width:50%;" class="myPic"></a>
										</div>
									</li>
								</ul>
							</div>
							
						</nav>
					</div>
				</div>
			</div>
		</div>
	<!-- 窗口顶部结束 -->



	<!--顶部导航 虚拟dom-->
	<script>
		let topMenu = new Vue({
			el: '#topMenu',
			data: {
				category: [],
				classA: 'display: none;',
				classB: 'display: block',
				topgd: 1, //用于判断滚动条位置
				inputText: '',
		        text: '',
		        nowIndex: -1,
		        result: [],//存储查询出的数据
		        user:[]
			},
			methods: {
				//监听滚动条
				handleScroll: function() {
					var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
					this.topgd = scrollTop
				},
				//获取所有分类
				getCategory: function() {
					let tis = this;
					axios.get('http://localhost:8010/category',{
						params: {
							  access_token: ''
						}
					}).then(function(response) {
						tis.category = response.data
					}).catch(function(error) {
						console.log(error);
					});
				},
				show: function(ev) {
		          if (ev.keyCode == 38 || ev.keyCode == 40) {
		            if (this.nowIndex < -1){
		              return;
		            }
		            if (this.nowIndex != this.result.length && this.nowIndex != -1) {
		              this.inputText = this.result[this.nowIndex];
		            }
		            return;
		          }
		          this.text = this.inputText;
		         axios.get('http://localhost:8010/learnrecord/getLearnrecordByStuId', {
		            params: {
		              stuId: this.inputText
		            },
		            jsonp: 'cb'
		          }).then(res => {
		            this.result = res.data;
		          })
		        },
		        down: function() {
		          this.nowIndex++;
		          if (this.nowIndex == this.result.length) {
		            this.nowIndex = -1;
		            this.inputText = this.text;
		          }
		        },
		        up: function() {
		          this.nowIndex--;
		          if (this.nowIndex < -1){
		            this.nowIndex = -1;
		            return;
		          }
		          if (this.nowIndex == -1) {
		            this.nowIndex = this.result.length;
		            this.inputText = this.text;
		          }
		        },
		        getLogin:function(){
		        	window.location.href="http://127.0.0.1:8020/前台/login/index.html?urlpath="+location
		        },
		        outLogin:function(){
					outUser(base);        	
		        }
			},
			mounted() {
				let tis=this;
				tis.getCategory();//获取所有分类
				if(Hwg.getUserId()!=null&&Hwg.getUserId()!='null'&&Hwg.getUserId()!=''){
					axios.get('http://localhost:8010/common/queryUser',{
						params: {
							  uid:Hwg.getUserId()
						}
					}).then(function(response) {
						tis.user = response.data
					}).catch(function(error) {
						console.log(error);
					});
				}
				window.addEventListener('scroll', tis.handleScroll) //添加滚动条监听事件
			}
		})
	</script>

	<!--顶部导航 虚拟dom（不固定）-->
	<script>
		let topMenu = new Vue({
			el: '#topMenu',
			data: {
				category: [],
				inputText: '',
		        text: '',
		        nowIndex: -1,
		        result: [],//存储查询出的数据
		        user:[]
			},
			methods: {
				//获取所有分类
				getCategory: function() {
					let tis = this;
					axios.get('http://localhost:8010/category',{
						params: {
							  access_token: ''
						}
					}).then(function(response) {
						tis.category = response.data
					}).catch(function(error) {
						console.log(error);
					});
				},
				show: function(ev) {
		          if (ev.keyCode == 38 || ev.keyCode == 40) {
		            if (this.nowIndex < -1){
		              return;
		            }
		            if (this.nowIndex != this.result.length && this.nowIndex != -1) {
		              this.inputText = this.result[this.nowIndex];
		            }
		            return;
		          }
		          this.text = this.inputText;
		         axios.get('http://localhost:8010/learnrecord/getLearnrecordByStuId', {
		            params: {
		              stuId: this.inputText
		            },
		            jsonp: 'cb'
		          }).then(res => {
		            this.result = res.data;
		          })
		        },
		        down: function() {
		          this.nowIndex++;
		          if (this.nowIndex == this.result.length) {
		            this.nowIndex = -1;
		            this.inputText = this.text;
		          }
		        },
		        up: function() {
		          this.nowIndex--;
		          if (this.nowIndex < -1){
		            this.nowIndex = -1;
		            return;
		          }
		          if (this.nowIndex == -1) {
		            this.nowIndex = this.result.length;
		            this.inputText = this.text;
		          }
		        },
		        getLogin:function(){
		        	window.location.href="http://127.0.0.1:8020/前台/login/index.html?urlpath="+location
		        },
		        outLogin:function(){
					outUser(location);        	
		        }
			},
			mounted() {
				let tis=this;
				tis.getCategory();//获取所有分类
				if(Hwg.getUserId()!=null&&Hwg.getUserId()!='null'&&Hwg.getUserId()!=''){
					axios.get('http://localhost:8010/common/queryUser',{
						params: {
							  uid:Hwg.getUserId()
						}
					}).then(function(response) {
						tis.user = response.data
					}).catch(function(error) {
						console.log(error);
					});
				}
			}
		})
	</script>
